if (isBuildModule.toBoolean()) {
    //作为独立App应用运行
    apply plugin: 'com.android.application'
} else {
    //作为组件运行
    apply plugin: 'com.android.library'
}

//    def API_HOST_INQ_TEST = "\"http://192.168.1.25:7002\""
def API_HOST_INQ_TEST = "\"http://192.168.1.22:7100\""
//    def API_HOST_INQ_OFFICIAL = "\"http://120.224.45.119:7103\""
def API_HOST_INQ_OFFICIAL = "\"http://192.168.1.127:9091\""
//    def API_HOST_INQ_OFFICIAL = "\"http://192.168.1.122:9091\""

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode pkgCode() as int
        versionName rootProject.ext.android.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
//                includeCompileClasspath = true
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
        ndk {
            abiFilters "armeabi",  "armeabi-v7a" , "arm64-v8a" , "x86"
//            abiFilters "armeabi-v7a" ,"arm64-v8a"
        }

        buildConfigField("String", "API_INQ_HOST", "${API_HOST_INQ_OFFICIAL}")
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
            if (isBuildModule.toBoolean()) {
                //独立运行
                manifest.srcFile 'src/main/alone/AndroidManifest.xml'
            } else {
                //合并到宿主
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    //正式版本时，排除debug文件夹下所有调试文件
                    exclude 'src/debug/*'
                }
            }
        }
    }
    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

static def pkgCode() {
    return new Date().format("yyyyMMddHH")
}